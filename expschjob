#!/bin/sh

################################################################################
#
#	expschjob
#
#	A tool to export scheduler jobs from Oracle Database
#
#	This tool has been tested in SQL*Plus 10 or above to give immediately
#       loadable scheduler job
#
#
#   Version	Date		Modified by	Descriptions
#  --------------------------------------------------------------------------
#   1.0.0	20100824	Kane Lai	First release
#   1.0.1	20141112	Kane Lai	Fixed handling of lower case
#						name
#
################################################################################


version="1.0.1"

if [ $# -lt 2 ]; then
	echo "expschjob v$version - A tool to export scheduler jobs from Oracle Database"
	echo "Exported scheduler job will be named schjob_(scheduler_job_name).sql the current directory"
	echo "Usage:\t`basename $0` [db_conn_str scheduler_job_name]"
	echo "    \"db_conn_str\": Oracle Database connection string to be passed to sqlplus, e.g. admin/mypassword@ora10g"
	echo "    \"scheduler_job_name\": Oracle scheduler job name, which is case in-sensitive, e.g. vanquish_batch_renew_job_0015"
	exit 1
fi

db_conn_str=$1
is_conn_str_ok=`echo $db_conn_str | grep -ic /`
if [ $is_conn_str_ok -ne 1 ]; then
	echo "Oracle Database connection string must be of the format \"username/password[@connect_identifier]\""
	exit 1
fi

# change scheduler job name to upper case
schjob_name="`echo $2 | tr "[:lower:]" "[:upper:]"`"

# get the lower case scheduler job name
schjob_name_lower="`echo $schjob_name | tr "[:upper:]" "[:lower:]"`"
schjob=`echo "schjob_"$schjob_name_lower".sql" | tr '[$]' '[_]'`

# execute SQL script
sqlplus -SL $db_conn_str << EOSQL >> /dev/null
set echo off
set maxdata 60000
set long 50000
set longchunksize 1000
set pages 0 lines 32767
set heading off
set verify off
set termout off
set feedback off
set trims on
set scan off
set timing off
spool $schjob
prompt var jobno number
prompt
prompt begin
prompt
select '--'||chr(9)||'dbms_scheduler.drop_job(''$schjob_name_lower'');' from dual;
prompt
select	chr(9)||'dbms_scheduler.create_job('||chr(10)||
	chr(9)||chr(9)||'job_name'||chr(9)||'=> ''$schjob_name_lower'','||chr(10)||
	chr(9)||chr(9)||'job_type'||chr(9)||'=> ''PLSQL_BLOCK'','||chr(10)||
	chr(9)||chr(9)||'job_action'||chr(9)||'=> '''||replace(job_action,'''','''''')||''','||chr(10)||
	chr(9)||chr(9)||'start_date'||chr(9)||'=> trunc(sysdate),'||chr(10)||
	chr(9)||chr(9)||'repeat_interval'||chr(9)||'=> '''||repeat_interval||''','||chr(10)||
	chr(9)||chr(9)||'end_date'||chr(9)||'=> null,'||chr(10)||
	chr(9)||chr(9)||'enabled'||chr(9)||chr(9)||'=> true);'
from	user_scheduler_jobs
where	upper(job_name) = '$schjob_name';
select chr(9)||'commit;' from dual;
prompt
select 'end;' from dual;
prompt /
prompt show err
spool off
exit
EOSQL

# confirm the export of scheduler job was successful
is_ok=`grep -ic $schjob_name $schjob`
if [ $is_ok -lt 1 ]; then
	echo "Failed to export scheduler job \"$schjob_name\", probably because the scheduler job does not exist or is inaccessible"
	rm $schjob
	exit 1
fi

# export successful
echo "Scheduler job \"$schjob_name\" exported successfully"
 
